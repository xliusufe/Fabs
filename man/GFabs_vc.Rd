% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bic_grpFabs_vc.r
\name{GFabs_vc}
\alias{GFabs_vc}
\title{A Group Forward and Backward Stagewise (GFabs) algorithm for Group penalized varying coefficient problem.}
\usage{
GFabs_vc(
  x,
  y,
  u,
  status = NULL,
  sigma = NULL,
  weight = NULL,
  bs.df = 5,
  bs.degree = 3,
  model = c("spr", "square", "cox", "logistic"),
  back = TRUE,
  stoping = TRUE,
  eps = 0.01,
  xi = 10^-6,
  iter = 10^4,
  lambda.min = NULL,
  design = FALSE
)
}
\arguments{
\item{x}{The covariates matrix.}

\item{y}{The survival outcome.}

\item{u}{The expose variable.}

\item{status}{The censoring indicator.}

\item{sigma}{The smoothing parameter for SPR.}

\item{weight}{The weight vector of groups.}

\item{bs.df}{The degree of freedom of B-splines.}

\item{bs.degree}{The degree of the B-splines.}

\item{model}{The loss function used.}

\item{back}{The indicator of whether to take backward steps.}

\item{stoping}{The indicator of whether to stop iteration when lambda is less than lambda.min.}

\item{eps}{The step size for GFabs.}

\item{xi}{The threshhold for GFabs.}

\item{iter}{The maximum number of outer-loop iterations allowed.}

\item{lambda.min}{The smallest value for lambda, as a fraction of lambda.max.}

\item{design}{The indicator of whether to return the design matrix after spline expansion.}
}
\value{
A list.
\itemize{
  \item W - The design matrix after spline expansion.
  \item theta - estimation of the new design matrix W.
  \item beta  - The optimal standardized estimation of covariates.
  \item lambda - Lambda sequence.
  \item direction - Direction of GFabs.
  \item active - Active set for each step.
  \item iter - Iterations.
  \item BIC - The bic for each solution.
  \item group - The grouping vector.
  \item opt - Position of the optimal tuning based on BIC.
  \item phi - The spline basis.
}
}
\description{
A Group Forward and Backward Stagewise (GFabs) algorithm for Group penalized varying coefficient problem.
}
\examples{
sigma = outer(1:20, 1:20, FUN = function(x, y) 0.3^(abs(x - y)))
x     = matrix(rnorm(100*20), 100, 20) \%*\% Matrix::chol(sigma)
u     = runif(100)
b     = cbind(5*sin(2*pi*u), 5*cos(2*pi*u), 5, -5, matrix(0, 100, 16))
error = c(0.7*rnorm(100)+0.3*rcauchy(100))
y     = rowSums(x * b) + error
fit   <- GFabs_vc(x, y, u)
}
